on:
    push:
        branches:
            - release

jobs:
    build:
        runs-on: [ubuntu-latest]
        steps:
            -   uses: actions/checkout@v4
            -   name: Set up JDK 17

                uses: actions/setup-java@v4
                with:
                    java-version: 17
                    distribution: 'temurin'

            -   uses: actions/cache@v4
                with:
                    path: ~/.m2/repository
                    key: ${{ runner.os }}-maven-${{ hashFiles('**/pom.xml') }}

            -   name: Installing local dependencies
                run: mvn initialize

            -   name: Build project
                run: mvn -U -B package --file pom.xml

            -   name: Archive build artifact
                uses: actions/upload-artifact@v4
                with:
                    name: target
                    path: target

    test:
        needs: build
        runs-on: [ubuntu-latest]
        steps:
            -   uses: actions/checkout@v4
            -   name: Set up JDK 17

                uses: actions/setup-java@v4
                with:
                    java-version: 17
                    distribution: 'temurin'

            -   uses: actions/cache@v4
                with:
                    path: ~/.m2/repository
                    key: ${{ runner.os }}-maven-${{ hashFiles('**/pom.xml') }}

            -   name: Installing local dependencies
                run: mvn initialize

            -   name: Test project
                run: mvn -B test --file pom.xml

    deploy-prd:
        needs: [test]
        runs-on: [ubuntu-latest]
        steps:
            -   uses: actions/checkout@v4

            -   name: Set up JDK 17
                uses: actions/setup-java@v4
                with:
                    java-version: 17
                    distribution: 'temurin'

            -   uses: actions/cache@v4
                with:
                    path: ~/.m2/repository
                    key: ${{ runner.os }}-maven-${{ hashFiles('**/pom.xml') }}

            -   name: Setup GPG
                run: |
                    echo "$GPG_PRIVATE_KEY" > private.asc
                    gpg --import --batch private.asc
                env:
                    GPG_PRIVATE_KEY: ${{ secrets.GPG_PRIVATE_KEY }}

            -   name: Deploy project
                run: |
                    export GPG_TTY=$(tty)
                    git config user.email "romualdrousseau@gmail.com"
                    git config user.name "Romuald Rousseau"
                    mvn -U -B -Darguments="-DskipTests -Prelease" release:prepare release:perform --file pom.xml -s settings.xml --batch-mode
                env:
                    OSSRH_USERNAME: ${{ secrets.OSSRH_USERNAME }}
                    OSSRH_TOKEN: ${{ secrets.OSSRH_TOKEN }}
                    GPG_PASSPHRASE: ${{ secrets.GPG_PASSPHRASE }}

    clean-prd:
        needs: [deploy-prd]
        runs-on: [ubuntu-latest]
        steps:
            -   uses: geekyeggo/delete-artifact@v5
                with:
                    name: target
