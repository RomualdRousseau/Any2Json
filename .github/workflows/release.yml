name: Release to Maven repository

on:
    release:
        types: [published]

jobs:
    build:
        runs-on: [ubuntu-latest]

        steps:
            -   uses: actions/checkout@v2
            -   name: Set up JDK 1.8
                uses: actions/setup-java@v1
                with:
                    java-version: 1.8
            -   uses: actions/cache@v1
                with:
                    path: ~/.m2/repository
                    key: ${{ runner.os }}-maven-${{ hashFiles('**/pom.xml') }}

            -   name: Installing local dependencies
                run: mvn install:install-file -Dfile="./libs/nl.fountain/xelem/3.1/xelem-3.1.jar" -DgroupId="nl.fountain" -DartifactId="xelem" -Dversion="3.1" -Dpackaging="jar"

            -   name: Build project
                run: mvn -B compile --file pom.xml

    test:
        needs: build
        runs-on: [ubuntu-latest]
        steps:
            -   uses: actions/checkout@v2
            -   name: Set up JDK 1.8
                uses: actions/setup-java@v1
                with:
                    java-version: 1.8
            -   uses: actions/cache@v1
                with:
                    path: ~/.m2/repository
                    key: ${{ runner.os }}-maven-${{ hashFiles('**/pom.xml') }}

            -   name: Test project
                run: mvn -B test --file pom.xml


    deploy:
        needs: [build, test]
        runs-on: [ubuntu-latest]

        steps:
            -   uses: actions/checkout@v2
            -   name: Set up JDK 1.8
                uses: actions/setup-java@v1
                with:
                    java-version: 1.8
            -   uses: actions/cache@v1
                with:
                    path: ~/.m2/repository
                    key: ${{ runner.os }}-maven-${{ hashFiles('**/pom.xml') }}

            -   name: Deploy project
                run: mvn -B deploy -P release -Dmaven.test.skip=true --file pom.xml -s settings.xml
                env:
                    MAVEN_USERNAME: ${{ secrets.OSSRH_USERNAME }}
                    MAVEN_PASSWORD: ${{ secrets.OSSRH_TOKEN }}
                    GPG_PASSPHRASE: ${{ secrets.GPG_PASSPHRASE }}
